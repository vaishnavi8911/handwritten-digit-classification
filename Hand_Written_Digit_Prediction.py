"""Handwritten_digit_classification.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1wfCnCjMgceqwcFegtAithCgFGzoxobg2

## **Hand Written Digit Prediction - Classification Analysis**

# **Objection:** The objective of the program is to train a machine learning model to classify handwritten digits (from 0 to 9) using the RandomForestClassifier on the Digits dataset, and to evaluate its performance using metrics such as a confusion matrix and classification report.

# **Data Source**: The dataset used in the program is the Digits dataset, which is a built-in dataset available in scikit-learn (sklearn.datasets). It contains 8x8 pixel grayscale images of handwritten digits (0-9) and their corresponding labels.

Data Source:

Name: Digits Dataset

Source: The dataset is a part of the scikit-learn library, which is a widely-used machine learning library in Python.

Link: Digits Dataset in scikit-learn

## **Import Library**
"""

import pandas as pd

import numpy as np

import matplotlib.pyplot as plt

"""# **Import Data**"""

from sklearn.datasets import load_digits

df=load_digits()

_, axes=plt.subplots(nrows=1, ncols=4, figsize=(10, 3))
for ax, image, label in zip(axes, df.images, df.target):
    ax.set_axis_off()
    ax.imshow(image, cmap=plt.cm.gray_r, interpolation="nearest")
    ax.set_title("Training: %i" % label)

"""# **Data preprocessing**"""

df.images.shape

df.images[0]

df.images[0].shape

len(df.images)

n_samples=len(df.images)
data=df.images.reshape((n_samples, -1))

data[0]

data[0].shape

data.shape

"""# **Scaling image data**"""

data.min()

data.max()

data=data/16

data.min()

data.max()

data[0]

"""# **Train Test Split data**"""

from sklearn.model_selection import train_test_split

X_train, X_test, y_train, y_test = train_test_split(data, df.target, test_size=0.3)

X_train.shape, X_test.shape, y_train.shape, y_test.shape

"""# **Random Forest model**"""

from sklearn.ensemble import RandomForestClassifier

rf= RandomForestClassifier()

rf.fit(X_train, y_train)

"""# **Predict test data**"""

y_pred=rf.predict(X_test)

y_pred

"""# **Model accuracy**"""

from sklearn.metrics import confusion_matrix, classification_report

confusion_matrix(y_test, y_pred)

print(classification_report(y_test, y_pred))

"""# **Explaination**: This program uses the Digits dataset of 8x8 pixel images of handwritten digits (0-9) to train a Random Forest Classifier. The images are flattened into 64 features and normalized. The model is trained on a training set and evaluated on a test set. Performance is assessed using a confusion matrix and classification report to analyze accuracy and precision."""